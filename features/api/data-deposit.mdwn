[[!toc levels=6]]

## Project

https://redmine.hmdc.harvard.edu/issues/3108 

http://projects.iq.harvard.edu/ojs-dvn/book/project-documentation

http://projects.iq.harvard.edu/ojs-dvn/book/faq-ojs-dataverse-integration-project

http://pkp.sfu.ca/wiki/index.php?title=PKP/Dataverse_Network_Integration

http://projects.iq.harvard.edu/files/styles/os_files_xxlarge/public/ojs-dvn/files/whiteboardofswordv2api.jpg via http://projects.iq.harvard.edu/ojs-dvn/blog/update-deep-trenches-swordv2-api-development

## What is SWORD? - Simple Web-service Offering Repository Deposit

http://swordapp.org

http://en.wikipedia.org/wiki/SWORD_%28protocol%29

### Intro to SWORD v2 video by Cottage Labs

http://cottagelabs.com/news/intro-to-sword-2

[[!table format=dsv delimiter="	" file="features/api/data-deposit/swordv2-verbs.tsv"]]

- GET the service-document-uri to retrieve a list of collections
- POST a package of content to the server which will
    - unpack it
    - create an object (a container?) and put into it
        - metadata
        - files
    - return a deposit receipt, which is an Atom entry, which contains three URIs:
        - edit-uri
        - edit-media-uri
        - statement-uri
- GET the edit-uri to retrieve the same deposit receipt from the original POST (a representation of the container)
- GET the edit-media-uri to get a package of content, possibly in a zip file
- GET the statement-uri to retrieve a document (OAI-ORE or Atom feed) that describes the structure of the objects on the server so we can build a representation of the object on the client end
- PUT a new package on the edit-media URI to *replace* content
- POST a package to the edit-uri *adds* new content
- DELETE to the edit-media-uri deletes all the content from the container
- DELETE to the edit-uri deletes the entire object

See also screenshots at Intro to SWORDv2 Cottage Labs video - Google Drive - https://docs.google.com/a/g.harvard.edu/document/d/1oyz3ZTfZA_7FFNpZNaxR6cDJzLXgm3X1ybwUkMQwL1Q/edit

## SWORD v2 spec

http://swordapp.github.io/SWORDv2-Profile/SWORDProfile.html via http://swordapp.org/sword-v2/sword-v2-specifications/

## DVN SWORD v2 implementation

- Status: Still lots of work to do... so far it allows you to...
    - retrieve a SWORD service document after authenticating
    - create a study based on metadata (title, author, etc.) in an XML file, i.e. https://github.com/IQSS/dvn/blob/10ece42ec9236ccd2e58eea2e69c7b54fc783133/tools/scripts/data-deposit-api/atom-entry-study.xml
    - upload a file to a study (treated as binary for now)
- Communication with OJS developers: http://projects.iq.harvard.edu/ojs-dvn/people
    - DVN SWORDv2 implementation design document: https://docs.google.com/document/d/1Sw8ZTjelFtWIi1etWqgQ0gPh6ltJuh8voX00WUi7Sng/edit?usp=sharing
    - Sample Atom Entry (SWORDv2) BTW OJS & DVN (with notes): https://docs.google.com/document/d/1Rn70XItfA6_mJ4JA3I7m4em0spfdXIIHhwkrgCl40uE/edit?usp=sharing
    - http://irclog.iq.harvard.edu/dvn/2013-07-02
    - http://irclog.iq.harvard.edu/dvn/2013-07-10
- Next steps
    - experiment with different files (RData, CSV, Stata, etc.) and ingest them
    - improve mapping between dcterms (Dublic Core) and DDI
    - deal with known bugs in the official SWORDv2 Java server library: https://github.com/swordapp/JavaServer2.0 (sword2-server-1.0-classes.jar) by committing to https://github.com/IQSS/swordv2-java-server-library and build sword2-server-1.0-classes.jar at https://build.hmdc.harvard.edu:8443/job/swordv2-java-server-library-iqss/
        - first character truncated from filename: https://github.com/swordapp/JavaServer2.0/pull/2
        - multipart deposit results in MalformedStreamException: https://github.com/dvn/swordpoc/issues/2
    - force https
    - merge https://github.com/IQSS/dvn/tree/3108-data-deposit-api into "develop" branch
        - URL patterns in servlet mappings: https://github.com/IQSS/dvn/blob/de603773c779a45f67b85908e8746b90c6e04661/src/DVN-web/web/WEB-INF/web.xml
            - `/api/data-deposit/swordv2/service-document/*`
            - `/api/data-deposit/swordv2/collection/*`
            - `/api/data-deposit/swordv2/edit/*`
            - `/api/data-deposit/swordv2/edit-media/*`
        - Many jars required (and more?):
            - abdera-core-1.1.1.jar
            - abdera-i18n-1.1.1.jar
            - abdera-parser-1.1.1.jar
            - axiom-api-1.2.10.jar
            - axiom-impl-1.2.10.jar
            - commons-fileupload-1.2.1.jar
            - sword2-server-1.0-classes.jar
            - xom-1.1.jar
- Questions for the DVN team
    - when should studies be released?
    - when should a journal dataverse be released?
    - how are we going to test the DVN SWORDv2 implemention?
        - the SWORDv2 client at https://github.com/swordapp/JavaClient2.0 seems promising. Some trouble getting it to communicate over HTTPS: how to tell Abdera to ignore invalid cert on localhost - http://mail-archives.apache.org/mod_mbox/abdera-user/201307.mbox/%3CCAHxGWy7kwpTqg6M9m4-SetATeLn9uBu2%2BXwOaPwXZmLME1m3rg%40mail.gmail.com%3E
    - how are we going to test interoperability with the OJS plugin?
- Questions for the SWORD community 
    - To upload a file, it is ok to continue to use the SWORDv2CollectionServlet (POST) or should we switch to the SWORDv2MediaResourceServlet (PUT)? A thread has been started on this: [sword-app-tech] POST atom entry, then PUT media resource - http://www.mail-archive.com/sword-app-tech@lists.sourceforge.net/msg00331.html

## SWORD v2 server implementations

http://swordapp.org/sword-v2/sword-v2-implementations/

### Python

#### Simple Sword Server (reference implementation)

https://github.com/swordapp/Simple-Sword-Server

https://github.com/dvn/swordpoc (Vagrant environment)

#### Databank

https://github.com/dataflow/RDFDatabank/wiki/SWORD-overview-for-developers

### Java

#### DSpace

The DSpace implementation of SWORD v2 was written by the spec lead:

https://github.com/DSpace/DSpace/tree/master/dspace-swordv2/src/main/java/org/dspace/sword2

#### DASH (Digital Access to Scholarship at Harvard) - http://dash.harvard.edu

DASH is built on top of DSpace and one of the DASH developers has been submitting pull requests to the common Java server library for SWORD at https://github.com/bmckinney/JavaServer2.0

##### Service Document example from DASH

The DASH Service Document looks something like this:

    <?xml version="1.0"?>
    <service xmlns="http://www.w3.org/2007/app" xmlns:atom="http://www.w3.org/2005/Atom">
      <workspace>
        <atom:title type="text">Digital Access to Scholarship at Harvard</atom:title>
        <collection href="http://dash.harvard.edu/swordv2/collection/1/2">
          <atom:title type="text">FAS Scholarly Articles</atom:title>
          <accept alternate="multipart-related">*/*</accept>
          <collectionPolicy xmlns="http://purl.org/net/sword/terms/">NOTE: PLACE YOUR OWN LICENSE HERE</collectionPolicy>
          <mediation xmlns="http://purl.org/net/sword/terms/">true</mediation>
          <acceptPackaging xmlns="http://purl.org/net/sword/terms/">http://purl.org/net/sword/package/SimpleZip</acceptPackaging>
          <acceptPackaging xmlns="http://purl.org/net/sword/terms/">http://purl.org/net/sword/package/METSDSpaceSIP</acceptPackaging>
          <acceptPackaging xmlns="http://purl.org/net/sword/terms/">http://purl.org/net/sword/package/Binary</acceptPackaging>
          <abstract xmlns="http://purl.org/dc/terms/">Peer reviewed scholarly articles from the Faculty of Arts and Sciences of Harvard University</abstract>
        </collection>
        <collection href="http://dash.harvard.edu/swordv2/collection/1/10527970">
          <atom:title type="text">FAS Student Papers</atom:title>
          <accept alternate="multipart-related">*/*</accept>
          <collectionPolicy xmlns="http://purl.org/net/sword/terms/">NOTE: PLACE YOUR OWN LICENSE HERE </collectionPolicy>
          <mediation xmlns="http://purl.org/net/sword/terms/">true</mediation>
          <acceptPackaging xmlns="http://purl.org/net/sword/terms/">http://purl.org/net/sword/package/SimpleZip</acceptPackaging>
          <acceptPackaging xmlns="http://purl.org/net/sword/terms/">http://purl.org/net/sword/package/METSDSpaceSIP</acceptPackaging>
          <acceptPackaging xmlns="http://purl.org/net/sword/terms/">http://purl.org/net/sword/package/Binary</acceptPackaging>
          <abstract xmlns="http://purl.org/dc/terms/">FAS Student Papers</abstract>
        </collection>
        <collection href="http://dash.harvard.edu/swordv2/collection/1/4927603">
          <atom:title type="text">FAS Theses and Dissertations</atom:title>
          <accept alternate="multipart-related">*/*</accept>
          <collectionPolicy xmlns="http://purl.org/net/sword/terms/">NOTE: PLACE YOUR OWN LICENSE HERE</collectionPolicy>
          <mediation xmlns="http://purl.org/net/sword/terms/">true</mediation>
          <acceptPackaging xmlns="http://purl.org/net/sword/terms/">http://purl.org/net/sword/package/SimpleZip</acceptPackaging>
          <acceptPackaging xmlns="http://purl.org/net/sword/terms/">http://purl.org/net/sword/package/METSDSpaceSIP</acceptPackaging>
          <acceptPackaging xmlns="http://purl.org/net/sword/terms/">http://purl.org/net/sword/package/Binary</acceptPackaging>
          <abstract xmlns="http://purl.org/dc/terms/">FAS Theses and Dissertations</abstract>
        </collection>
      </workspace>
      <generator xmlns="http://www.w3.org/2005/Atom" uri="http://www.dspace.org/ns/sword/2.0/" version="2.0">dash-webadmin@hulmail.harvard.edu</generator>
      <version xmlns="http://purl.org/net/sword/terms/">2.0</version>
    </service>

#### Fedora (Fedora Commons Repository Software)

https://github.com/mediashelf/sword2-fedora and https://github.com/mediashelf/sword2-server via http://www.mail-archive.com/sword-app-tech@lists.sourceforge.net/msg00317.html

### Perl

#### EPrints

http://wiki.eprints.org/w/SWORD

https://github.com/eprints/eprints/blob/master/perl_lib/EPrints/Apache/CRUD.pm

## Community

http://swordapp.org/contact/

### sword-app-tech@lists.sourceforge.net

https://lists.sourceforge.net/lists/listinfo/sword-app-tech http://www.mail-archive.com/sword-app-tech@lists.sourceforge.net/

### https://twitter.com/swordapp

### #dspace on Freenode
